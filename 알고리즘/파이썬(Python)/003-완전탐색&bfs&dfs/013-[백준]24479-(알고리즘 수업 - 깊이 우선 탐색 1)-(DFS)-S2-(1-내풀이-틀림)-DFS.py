# [백준]24479-(알고리즘 수업 - 깊이 우선 탐색 1)-(DFS)-S2-(1-내풀이-틀림)-DFS.py
# https://github.com/irishNoah/Algorithm-Study
# https://www.acmicpc.net/problem/24479

'''
*** 제한 > 시간 : ?초 (기본 1초) / 메모리 : ?MB (기본 128MB)

*** 조건
- 모든 간선의 가중치는 1이다.
- 정점은 R에서 시작하고, 깊이 우선탐색(DFS)으로 노드를 방문할 경우,
노드의 방문 순서를 출력
- 인접 정점은 오름차순으로 방문
- 정점의 수 N (5 ≤ N ≤ 100,000)
    - O(N * lon N) 이하의 시간복잡도 가져야...
- 간선의 수 M (1 ≤ M ≤ 200,000)
- 시작 정점 R (1 ≤ R ≤ N)
- M(= 간선의 수)개의 줄에 간선 정보 u, v가 주어짐 (u,v는 정점을 의미)
    - (1 ≤ u < v ≤ N, u ≠ v)
    - 모든 간선의 (u, v) 쌍의 값은 서로 다르다.


*** 설계 [총 27분 소요] / 총 풀이 시간[총 -분 소요] >>> 못 품 ㅠㅠ
1. 첫 째 줄에 N(정점의 수), M(간선의 수), R(시작 정점)이 주어진다.
>>> N개의 수만큼 방문 정보에 대한 리스트 visited 생성 >>> visited = [false] * N
2. M개의 줄에 간선 정보 u v가 주어진다.
>>> 간선 정보에 대한 2차원 리스트 >>> arr
3. arr 오름차순 정렬
4. dfs 함수 구성 > dfs(u, v, visitied)
- 만약, dfs[u] == false
    - dfs[u] = True
    - print(u)
    - return
- 만약, dfs[v] == True
    - return


*** 참고

'''
#===================================================================================


#===================================================================================