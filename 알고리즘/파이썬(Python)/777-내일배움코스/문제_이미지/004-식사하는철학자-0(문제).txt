<문제 설명>
아래 그림과 같이 철학자 n명이 원탁에 앉아 있고, 1번 철학자의 왼쪽에는 i+1번 철학자가 앉아 있으며, 마지막 철학자의 왼쪽에는 0번 철학자가 앉아 있습니다. 각 철학자 사이 에는 젓가락이 한 개씩 놓여 있습니다. 한 명의 철학자가 식사를 하기 위해서는, 자신의 양 옆에 있는 젓가락 두 개가 모두 필요합니다. 한 철학자가 사용한 젓가락은 다른 철학 자가 사용할 수 없습니다. 따라서, 원탁에 앉은 철학자 모두가 식사를 할 수는 없습니다. 예를 들어, 아래 그림에서 0번 철학자가 자신의 양 옆에 놓인 젓가락을 하나씩 들어 식 사를 할 경우, 1번 철학자는 자신의 오른쪽에 있는 젓가락을 사용할 수 없고, 6번 철학자는 자신의 왼쪽에 있는 젓가락을 사용할 수 없어 식사를 할 수 없습니다.

오늘 식사하기 위해 모인 철학자들은 공리주의 철학자들 입니다. 따라서 그들은 개인의 만족도보다 모든 철학자들의 만족도 합이 높은 것을 좋아합니다. 철학자들은 식사를 할 경우 느끼는 만족도가 각자 다를 수 있으며 식사 준비가 부족하여 최대로 식사할 수 있는 철학자 수에 제한이 있을 수도 있습니다.

예를 들어, 아래 그림과 같이 7명의 철학자가 원탁에 앉아 있다고 합시다. 각 철학자는 0번부터 6번까지 번호를 붙여 구분하기로 하고, 시계방향으로 차례대로 앉아 있습니다. 철학자들이 식사를 할 때 느끼는 만족도는 차례로 [5, 4, 4, 6, 2, 1, 3]이라고 합시다. 현재 3인분의 식사가 준비되어 있다면, 1번, 3번, 6번 철학자가 식사를 할 경우 만족도 합 이 4+6+3=13이 되어 최대가 됩니다.

철학자들이 식사를 할 경우 각자 느끼는 만족도가 저장된 정수 배열 satisfy 와 현재 준비된 식사의 수 k 가 매개변수로 주어집니다. 철학자들의 만족도 합의 최대값을 return 하도록 solution 함수를 완성해주세요.

<제한사항>
- 3≤ satisfy 의 길이≤ 100,000
- satisfy[i]는 i 번 철학자가 느끼는 만족도 입니다.
- 1≤ satisfy 의 원소 ≤ 1,000
• 1≤ K ≤ (satisfy 의 길이 / 2)

<입출력 예>
satisfy >>> [5, 4, 4, 6, 2, 1, 3]
k >>> 3
result >>> 13

satisfy >>> [10, 1, 1, 10, 1, 1, 10, 1]
k >>> 4
result >>> 30

<입출력 예 설명>
{입출력 예 #1}
>>> 본문에서 설명한 예시입니다.

{입출력 예 #2}
>>> 준비된 식사는 4인분 이지만, 0번, 3번, 6번 철학자 3명만 식사할 경우 만족도 합이 30으로 최대가 됩니다.