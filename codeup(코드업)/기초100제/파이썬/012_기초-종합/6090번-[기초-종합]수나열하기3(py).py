# 코드업 100제 
# 6090번-수나열하기3(py).py

'''
어떤 규칙에 따라 수를 순서대로 나열한 것을 수열(sequences)이라고 한다.

예를 들어
1 -1 3 -5 11 -21 43 ... 은
1부터 시작해 이전에 만든 수에 -2를 곱한 다음 1을 더해 다음 수를 만든 수열이다.

이런 이상한 수열을 알게 된 영일이는 또 궁금해졌다.
"그럼.... 13번째 나오는 수는 뭘까?"

영일이는 물론 수학을 아주 잘하지만 이런 문제는 본 적이 거의 없었다...
그래서 프로그램을 만들어 더 큰 수도 자동으로 계산하고 싶어졌다.

시작 값(a), 곱할 값(m), 더할 값(d), 몇 번째인지를 나타내는 정수(n)가 입력될 때,
n번째 수를 출력하는 프로그램을 만들어보자.

*****예시
-

*****입력
시작 값(a), 곱할 값(m), 더할 값(d), 몇 번째 인지를 나타내는 정수(n)가
공백을 두고 입력된다.(a, m, d는 -50 ~ +50, n은 10이하의 자연수)

*****출력
n번째 수를 출력한다.

*****입력 예시
1 -2 1 8

*****출력 예시
-85

'''

# 풀이법 

a, m, d, n = map(int, input().split())

# 풀이법 1
result = a

for i in range(2, n+1):
    result = result * m +d

print(result)

# 풀이법 2
cnt = 2 # 카운트값
result = a # 계산값

while True:
    result = result * m +d

    if cnt == n:
        print(result)
        break

    cnt += 1

'''
처음에는 풀이법 2로 풀었다. 그런데 시간 초과로 판정났다.
그 이후 풀이법 1로 풀었다. 바로 합격했다.

for나 while이나 반복인데 왜 차이가 났을까?
단순이 시간 초과 판별의 차이뿐만 아니라 걸리는 시간 차이도 많이 났다.
개인적인 생각으로는 while문 안에 비교문 때문이라는 생각이 든다.

따라서 개인적으로는 시간초과 문제를 일으키지 않기 위해서는
while문보다는 for문을 활용하는 것이 좋다고 생각한다.


***** 참고

-

'''