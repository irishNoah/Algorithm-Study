##### 코드업-파이썬-총복습

*** 문자열을 작은 따옴표로 묶었을 경우
> 이 경우에서 문자열 안에 작은 따옴표를 출력하고 싶을 경우
- 작은 따옴표 앞에 \(역슬래쉬) 사용
- 예 : print('\'hello\'')

*** 문자열을 큰 따옴표로 묶었을 경우
> 이 경우에서 문자열 안에 작은 따옴표를 출력하고 싶을 경우
- 작은 따옴표 앞에 \(역슬래쉬) 사용
- 예 : print('\'hello\'')

*** 문자열 안에서 /(슬래쉬)를 사용하고 싶을 경우
- 슬래쉬를 두 번 print문 안에서 사용해야 출력에서 슬래쉬가 나온다
- 사용 예 : print("안녕//하세요") >>>>> 출력 - 안녕/하세요

*** 파이썬 소수점 이하 자리 반올림 출력 방식 2가지
val1 = float(input())

방식 1 >>>>> print('%.2f'%val1) # 동일한 결과 출력
방식 2 >>>>> print( format(val1, ".2f") ) # 동일한 결과 출력

*** 비트시프트 연산

n = 10
print(n<<1)  #10을 2배 한 값인 20 이 출력된다.
print(n>>1)  #10을 반으로 나눈 값인 5 가 출력된다.
print(n<<2)  #10을 4배 한 값인 40 이 출력된다.
print(n>>2)  #10을 반으로 나눈 후 다시 반으로 나눈 값인 2 가 출력된다.

*** 수의 bool 값
- 정수 0의 bool() 값만 False, 나머지 수들의 bool() 값은 True

*** xor 연산 예시

a, b = input().split()

c = bool(int (a))
d = bool(int (b))

print((c and not d) or (not c and d))

*** 비트단위논리연산
- 다른 언어에서는 비트단위논리연산을 진행하기 위해서는 일일이 2진수화 시켜주어 계산을 해줘야 했는데
파이썬에서는 정수에서 바로 기호(& | ~ ^)을 통해서 계산을 할 수 있어서 매우 간편했던 것 같다.

a = 1
print(~a) #-2가 출력된다.

a, b = input().split() # 입력 > 3 5

and 연산 >>>>> print(int(a) & int(b)) # 출력 > 1
or 연산 >>>>> print(int(a) | int(b)) # 출력 > 7
xor 연산 >>>>> print(int(a) ^ int(b)) # 출력 > 6

*** 3항연산
 a>=b 의 결과가 True(참) 이면 (a if (a>=b) else b)의 결과는 a가 되고, 거짓이면 b가 된다.

*** n진수 입력 받기
@ 16진수로 입력을 받아야 할 경우
>>>>> val = int(input(), 16)  와 같은 형식으로 받으면 된다.

*** 한 번에 정수 여러개 입력받기

>>>>> a, m, d, n = map(int, input().split()) 

위과 같이 한 번에 정수로 입력 받을 수 있음

*** 0으로만 이루어진 2차원 리스트 쉽게 생성하기(예시)
>>>>> listA = [[0]*19 for i in range(19)]

*** 리스트 요소값만 출력 (리스트 앞에 * 붙이기!!!!!)
>>>>> print(*a)




















