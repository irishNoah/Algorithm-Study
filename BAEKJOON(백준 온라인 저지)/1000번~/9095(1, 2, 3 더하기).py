# 9095 / 1, 2, 3 더하기 / S3
# https://www.acmicpc.net/problem/9095

# 이 문제의 알고리즘은 다이나믹 프로그래밍에 해당된다.
# 즉, 다이나믹 프로그래밍은 규칙을 활용하여 문제를 풀어야 한다.
# 정수 입력값을 k라고 가정하고 문제를 생각해보자.

# k가 1이라고 하면 방법의 수는 (1)로 1이다.
# k가 2라고 생각하면 방법의 수는 (1+1), (2)로 2이다.
# k가 3이라고 생각하면 방법의 수는 (1+1+1), (2+1), (1+2), (3)로 4이다.
# K가 4라고 생각하면 방법의 수는 (1+1+1+1), (1+1+2), (1+2+1), (1+1+2), (2+2), (1+3), (3+1)로 7이다.
# k가 5라고 생각하면 방법의 수는 (1+1+1+1+1), (1+1+1+2), (1+1+2+1), (1+2+1+1), (2+1+1+1),
# (1+2+2), (2+1+2), (2+2+1), (1+1+3), (1+3+1), (3+1+1), (2+3), (3+2)로  13이다.

# 위 k에 대한 방법의 수의 결과를 보면 k가 3 초과일 때에 대해 방법의 수는
# "k의 방법의 수 = (k-1)의 방법의 수 + (k-2)의 방법의 수 + (k-3)의 방법의 수"라는 것을 알 수 있다.
# 이를 코드로 구현하면 다음과 같다.

# 방법의 수를 구하기 위한 함수 cnt 선언 및 구현
def cnt(n) :
    # n이 1일 경우는 1을 리턴
    if n == 1 :
        return 1
    # n이 2일 경우는 2를 리턴
    elif n == 2 :
        return 2
    # n이 3일 경우는 4를 리턴    
    elif n == 3 :
        return 4
    # n이 3 초과일 경우는 방법의 수를 구한후 리턴
    else :
        return cnt(n-1) + cnt(n-2) + cnt(n-3)

# 테스트케이스 개수 입력
caseValue = int(input())

# 테스트케이스 개수만큼 정수를 입력하고 입력 받자마자 해당 수에 대한
# 방법의 수를 출력
for _ in range(caseValue) :
    k = int(input())
    print(cnt(k))